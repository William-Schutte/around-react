{"version":3,"sources":["components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/header-logo.svg"],"names":["Header","className","src","headerLogo","alt","api","options","this","fetch","baseUrl","headers","then","res","ok","json","Promise","reject","status","newName","name","newAbout","about","method","body","JSON","stringify","newUrl","avatar","newLink","link","cardId","cardData","userId","likes","some","like","_id","authorization","Card","props","style","backgroundImage","card","onClick","onCardClick","type","aria-label","length","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","userInfoPromise","getUserInfo","initialCardsPromise","getInitialCards","all","console","log","onEditAvatar","onEditProfile","onAddPlace","map","key","onClose","Footer","PopupWithForm","isOpen","title","children","btnText","ImagePopup","App","isEditProfileOpen","setIsEditProfileOpen","isAddPlaceOpen","setIsAddPlaceOpen","isEditAvatarOpen","setIsEditAvatarOpen","selectedCard","setSelectedCard","closeAllPopups","id","placeholder","required","minLength","maxLength","pattern","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.aafa000a.chunk.js","sourcesContent":["import React from 'react';\nimport headerLogo from '../images/header-logo.svg';\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <img className=\"header__logo\" src={headerLogo} alt=\"Around the U.S. Logo\" />\n        </header>\n    )\n}\n\nexport default Header;","// ###########################  API Class  ########################################################\n\nclass Api {\n    constructor(options) {\n      this.options = options;\n    }\n  \n    getUserInfo() {\n        return fetch(`${this.options.baseUrl}/users/me`, {\n            headers: this.options.headers,\n        })\n          .then(res => {\n            if (res.ok) {\n                return res.json();\n            } else {\n                return Promise.reject(`Error: ${res.status}`);\n            }\n          });\n    }\n\n    patchUserInfo({ name: newName, about: newAbout }) {\n        return fetch(`${this.options.baseUrl}/users/me`, {\n            method: \"PATCH\",\n            headers: this.options.headers,\n            body: JSON.stringify({ name: newName, about: newAbout })\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n    patchUserPic({ avatar: newUrl }) {\n        return fetch(`${this.options.baseUrl}/users/me/avatar`, {\n            method: \"PATCH\",\n            headers: this.options.headers,\n            body: JSON.stringify({ avatar: newUrl })\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n    getInitialCards() {\n        return fetch(`${this.options.baseUrl}/cards`, {\n          headers: this.options.headers,\n        })\n          .then(res => {\n            if (res.ok) {\n                return res.json();\n            } else {\n                return Promise.reject(`Error: ${res.status}`);\n            }\n          });\n    }\n    \n    addNewCard({ name: newName, link: newLink }) {\n        return fetch(`${this.options.baseUrl}/cards`, {\n            method: \"POST\",\n            headers: this.options.headers,\n            body: JSON.stringify({ name: newName, link: newLink })\n          })\n            .then(res => {\n              if (res.ok) {\n                  return res.json();\n              } else {\n                  return Promise.reject(`Error: ${res.status}`);\n              }\n            });\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this.options.baseUrl}/cards/${cardId}`, {\n            method: \"DELETE\",\n            headers: this.options.headers,\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n    likeCard(cardData, userId) {\n        \n        if (cardData.likes.some((like) => {return (like._id === userId);})) {\n            return fetch(`${this.options.baseUrl}/cards/likes/${cardData._id}`, {\n                method: \"DELETE\",\n                headers: this.options.headers,\n            })\n                .then(res => {\n                    if (res.ok) {\n                        return res.json();\n                    } else {\n                        return Promise.reject(`Error: ${res.status}`);\n                    }\n                });\n        } else {\n            return fetch(`${this.options.baseUrl}/cards/likes/${cardData._id}`, {\n                method: \"PUT\",\n                headers: this.options.headers,\n            })\n                .then(res => {\n                    if (res.ok) {\n                        return res.json();\n                    } else {\n                        return Promise.reject(`Error: ${res.status}`);\n                    }\n                });\n        }\n        \n    }\n\n    unlikeCard(cardId) {\n        return fetch(`${this.options.baseUrl}/cards/likes/${cardId}`, {\n            method: \"DELETE\",\n            headers: this.options.headers,\n        })\n            .then(res => {\n                if (res.ok) {\n                    return res.json();\n                } else {\n                    return Promise.reject(`Error: ${res.status}`);\n                }\n            });\n    }\n\n}\n\nconst api = new Api({\n    baseUrl: \"https://around.nomoreparties.co/v1/group-1\",\n    headers: {\n        authorization: \"b3ddd9c8-cc64-4470-93b1-0840e92522c5\",\n        \"Content-Type\": \"application/json\"\n    }\n});\n\nexport default api;","import React from 'react';\n\nfunction Card(props) {\n    function handleClick() {\n        props.onCardClick(props.card);\n    }\n\n    return (\n        <li className=\"card\">\n            <div className=\"card__image\" style={{ backgroundImage: `url(${props.card.link})` }} onClick={handleClick} />\n            <button type=\"button\" aria-label=\"Card Delete Button\" className=\"card__delete-button\"></button>\n            <div className=\"card__overlay\">\n                <h2 className=\"card__name\">{props.card.name}</h2>\n                <div className=\"card__like-column\">\n                    <button type=\"button\" aria-label=\"Card Favorite Button\" className=\"card__fav-button\"></button>\n                    <p className=\"card__like-count\">{props.card.likes.length}</p>\n                </div>\n            </div>\n        </li>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport api from '../utils/api.js';\nimport Card from './Card.js';\n\nfunction Main(props) {\n\n    // Declaration of hooks that act as state variables for user info and cards\n    const [userName, setUserName] = React.useState('');\n    const [userDescription, setUserDescription] = React.useState('');\n    const [userAvatar, setUserAvatar] = React.useState('');\n    const [cards, setCards] = React.useState([]);\n\n    // Effect hook for updating of user info and cards\n    React.useEffect(() => {\n        const userInfoPromise = api.getUserInfo();\n        const initialCardsPromise = api.getInitialCards();\n        Promise.all([userInfoPromise, initialCardsPromise]).then((res) => {\n            console.log(res);\n            setUserName(res[0].name);\n            setUserDescription(res[0].about);\n            setUserAvatar(res[0].avatar);\n            setCards(res[1]);\n        });\n\n    }, []);\n\n    return (\n        <main className=\"content\">\n            {/* Profile section at top of page, contains three buttons for editing profile and cards */}\n            <section className=\"profile\">\n                <button type=\"button\" className=\"profile__pic-button\" onClick={props.onEditAvatar}></button>\n                <div className=\"profile__picture\" style={{ backgroundImage: `url(${userAvatar})` }} alt=\"My Profile Pic\" />\n                <div className=\"profile__info\">\n                    <h1 className=\"profile__name\">{userName}</h1>\n                    <p className=\"profile__occupation\">{userDescription}</p>\n                </div>\n                <button type=\"button\" aria-label=\"Edit Profile Button\" className=\"profile__edit-button btn-animate\" onClick={props.onEditProfile}></button>\n                <button type=\"button\" aria-label=\"Add Card Button\" className=\"profile__add-button btn-animate\" onClick={props.onAddPlace}></button>\n            </section>\n\n            {/* Image cards section, generated from server response */}\n            <section className=\"cards\">\n                <ul className=\"cards__container\">\n                    {cards.map(card => (\n                        <Card key={card._id} card={card} onCardClick={props.onCardClick} onClose={props.onClose} />\n                    ))}\n                </ul>\n            </section>\n        </main>\n    );\n}\n\nexport default Main;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n                <p className=\"footer__copyright\">&copy;2020 William Schutte. Around the U.S.</p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\n\nfunction PopupWithForm(props) {\n    return(\n        <form className={`form ${props.name} ${props.isOpen && (`popup-opened`)}`} name={props.name}>\n            <div className=\"form__container\">\n                <h2 className=\"form__title\">{props.title}</h2>\n                {props.children}\n                <button type=\"submit\" className=\"form__save-button btn-animate\">{props.btnText}</button>\n                <button type=\"button\" aria-label=\"Close Form Button\" className=\"form__exit-button btn-animate\" onClick={props.onClose}></button>\n            </div>\n        </form>\n    );\n}\n\nexport default PopupWithForm;","import React from 'react';\n\nfunction ImagePopup({ card, onClose }) {\n    return (\n        <div className={`picture ${card && (`popup-opened`)}`}>\n            <div className=\"picture__column\">\n                <img className=\"picture__img\" src={card ? card.link : ''} alt={card ? card.name : ''}/>\n                <h2 className=\"picture__title\">{card && card.name}</h2>\n                <button type=\"button\" aria-label=\"Close Picture Button\" className=\"form__exit-button btn-animate\" onClick={onClose}></button>\n            </div>\n        </div>\n    );\n}\n\nexport default ImagePopup;","import React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport ImagePopup from './ImagePopup.js';\n\nfunction App() {\n\n    // Declaration of three hooks that act as state variables for the visibility of each form\n    const [isEditProfileOpen, setIsEditProfileOpen] = React.useState(false);\n    const [isAddPlaceOpen, setIsAddPlaceOpen] = React.useState(false);\n    const [isEditAvatarOpen, setIsEditAvatarOpen] = React.useState(false);\n\n    // Selected card hook for state of Image Popup\n    const [selectedCard, setSelectedCard] = React.useState(null);\n    \n    function handleEditAvatarClick() {\n        setIsEditAvatarOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfileOpen(true);\n    }\n    \n    function handleAddPlaceClick() {\n        setIsAddPlaceOpen(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarOpen(false);\n        setIsEditProfileOpen(false);\n        setIsAddPlaceOpen(false);\n        setSelectedCard(null);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n  return (\n    <>\n        {/* Header section */}\n        <Header />\n        {/* Main content */}\n        <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} onClose={closeAllPopups} />\n        {/* Footer section */}\n        <Footer />\n\n        {/* Popup Edit User Info Form */}\n        <PopupWithForm name=\"form-edit\" title=\"Edit profile\" isOpen={isEditProfileOpen} btnText=\"Save\" onClose={closeAllPopups}>\n            <label className=\"form__input-field\">\n                <input id=\"form-name\" name=\"primary\" className=\"form__name form__input\" type=\"text\" placeholder=\"Name\" required minLength=\"2\" maxLength=\"40\" pattern=\"[A-Za-z -]*\" />\n                <span id=\"form-name-error\" className=\"form__error\"></span>\n            </label>\n            <label className=\"form__input-field\">\n                <input id=\"form-occupation\" name=\"secondary\" className=\"form__occupation form__input secondary\" type=\"text\" placeholder=\"About\" required minLength=\"2\" maxLength=\"200\" />\n                <span id=\"form-occupation-error\" className=\"form__error\"></span>\n            </label>\n        </PopupWithForm>\n\n        {/* Popup Edit User Pic Form */}\n        <PopupWithForm name=\"form-pic\" title=\"Change userpic\" isOpen={isEditAvatarOpen} btnText=\"Save\" onClose={closeAllPopups}>\n            <label className=\"form__input-field\">\n                <input id=\"form-name\" name=\"primary\" className=\"form__name form__input\" type=\"url\" placeholder=\"Image link\" required />\n                <span id=\"form-name-error\" className=\"form__error\"></span>\n            </label>\n        </PopupWithForm>\n\n        {/* Popup Add Form */}   \n        <PopupWithForm name=\"form-add\" title=\"New place\" isOpen={isAddPlaceOpen} btnText=\"Create\" onClose={closeAllPopups}>\n            <label className=\"form__input-field\">\n                <input id=\"form-place\" name=\"primary\" className=\"form__place form__input\" type=\"text\" placeholder=\"Title\" required minLength=\"1\" maxLength=\"30\" />\n                <span id=\"form-place-error\" className=\"form__error\"></span>\n            </label>\n            <label className=\"form__input-field\">\n                <input id=\"form-url\" name=\"secondary\" className=\"form__url form__input\" type=\"url\" placeholder=\"Image link\" required />\n                <span id=\"form-url-error\" className=\"form__error\"></span>\n            </label>\n        </PopupWithForm>\n\n        {/* Popup Delete Form */}\n        <PopupWithForm name=\"form-delete\" title=\"Are you sure?\" isOpen={null} btnText=\"Yes\" onClose={closeAllPopups} />\n\n        {/* Image Popup */}\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n    </>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/header-logo.8f7611ae.svg\";"],"sourceRoot":""}